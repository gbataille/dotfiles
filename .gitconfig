[user]
	name = Gr√©gory Bataille
	email = gregory.bataille@gmail.com
[alias]
	st = status
	co = checkout
	cob = switch -c
	sw = switch
	swc = switch -c
	commitamend = commit --amend --no-edit
	ca = commit --amend
	ce = commit --amend --no-edit
	p = push
	b = branch -v
	t = tag -a
	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"
	d = diff -w
	dt = difftool
	dc = diff --cached -w
	branch-clean = "!sh clean_remote_branches.sh"
	g = grep -W
	clb = clean_local_branches
[core]
	excludesfile = /Users/gbataille/.gitignore_global
	hooksPath = /Users/gbataille/Documents/Prog/MyConfig/dotfiles/.git_hooks
[push]
	default = simple
[github]
	user = gbataille
[color]
	ui = true
[init]
	templatedir = ~/.git_templates
	defaultBranch = main
[pull]
	rebase = merges
[rerere]
	enabled = true
[diff]
	tool = vimdiff
	indentHeuristic = true
	algorithm = patience
	colorMoved = zebra
[difftool]
	prompt = false
	tool = vimdiff
	trustExitCode = true
[merge]
	ff = false
	tool = vimdiff
[mergetool]
	tool = vimdiff
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[pager]
	log = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	show = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	diff = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	branch = false
[interactive]
	diffFilter = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight
[grep]
	lineNumber = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
